{"ast":null,"code":"var _jsxFileName = \"/Users/pradnya/Desktop/ecommerce-app/frontend/src/components/PaymentForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useStripe, useElements, CardElement } from \"@stripe/react-stripe-js\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaymentForm = ({\n  totalAmount\n}) => {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [paymentStatus, setPaymentStatus] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setLoading(true);\n    try {\n      // Create Payment Intent from the backend\n      const {\n        data\n      } = await axios.post(\"http://localhost:5002/api/payments/create-payment-intent\", {\n        amount: totalAmount * 100,\n        // Amount in cents\n        currency: \"usd\"\n      });\n      const clientSecret = data.clientSecret;\n\n      // Confirm Card Payment\n      const cardElement = elements.getElement(CardElement);\n      const {\n        error,\n        paymentIntent\n      } = await stripe.confirmCardPayment(clientSecret, {\n        payment_method: {\n          card: cardElement\n        }\n      });\n      if (error) {\n        setPaymentStatus(`Payment failed: ${error.message}`);\n      } else if (paymentIntent.status === \"succeeded\") {\n        setPaymentStatus(\"Payment successful!\");\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setPaymentStatus(`Error: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Complete Your Payment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(CardElement, {\n          options: {\n            style: {\n              base: {\n                fontSize: \"16px\",\n                color: \"#424770\",\n                \"::placeholder\": {\n                  color: \"#aab7c4\"\n                }\n              },\n              invalid: {\n                color: \"#9e2146\"\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !stripe || loading,\n        children: loading ? \"Processing...\" : \"Pay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), paymentStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: paymentStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentForm, \"HVmlDQ82Khcdy9j0AeRUkdL+IRs=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = PaymentForm;\nexport default PaymentForm;\nvar _c;\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"names":["React","useState","useStripe","useElements","CardElement","axios","jsxDEV","_jsxDEV","PaymentForm","totalAmount","_s","stripe","elements","paymentStatus","setPaymentStatus","loading","setLoading","handleSubmit","event","preventDefault","data","post","amount","currency","clientSecret","cardElement","getElement","error","paymentIntent","confirmCardPayment","payment_method","card","message","status","_error$response","_error$response$data","response","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","options","style","base","fontSize","color","invalid","type","disabled","_c","$RefreshReg$"],"sources":["/Users/pradnya/Desktop/ecommerce-app/frontend/src/components/PaymentForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useStripe, useElements, CardElement } from \"@stripe/react-stripe-js\";\nimport axios from \"axios\";\n\nconst PaymentForm = ({ totalAmount }) => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const [paymentStatus, setPaymentStatus] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setLoading(true);\n\n    try {\n      // Create Payment Intent from the backend\n      const { data } = await axios.post(\"http://localhost:5002/api/payments/create-payment-intent\", {\n        amount: totalAmount * 100, // Amount in cents\n        currency: \"usd\",\n      });\n\n      const clientSecret = data.clientSecret;\n\n      // Confirm Card Payment\n      const cardElement = elements.getElement(CardElement);\n      const { error, paymentIntent } = await stripe.confirmCardPayment(clientSecret, {\n        payment_method: {\n          card: cardElement,\n        },\n      });\n\n      if (error) {\n        setPaymentStatus(`Payment failed: ${error.message}`);\n      } else if (paymentIntent.status === \"succeeded\") {\n        setPaymentStatus(\"Payment successful!\");\n      }\n    } catch (error) {\n      setPaymentStatus(`Error: ${error.response?.data?.error || error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Complete Your Payment</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <CardElement\n            options={{\n              style: {\n                base: {\n                  fontSize: \"16px\",\n                  color: \"#424770\",\n                  \"::placeholder\": {\n                    color: \"#aab7c4\",\n                  },\n                },\n                invalid: {\n                  color: \"#9e2146\",\n                },\n              },\n            }}\n          />\n        </div>\n        <button type=\"submit\" disabled={!stripe || loading}>\n          {loading ? \"Processing...\" : \"Pay\"}\n        </button>\n      </form>\n      {paymentStatus && <p>{paymentStatus}</p>}\n    </div>\n  );\n};\n\nexport default PaymentForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}