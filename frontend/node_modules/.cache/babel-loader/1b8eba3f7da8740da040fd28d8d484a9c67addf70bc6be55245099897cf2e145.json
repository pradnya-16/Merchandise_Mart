{"ast":null,"code":"var _jsxFileName = \"/Users/pradnya/Desktop/ecommerce-app/frontend/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { registerUser, loginUser } from '/api'; // Import API functions\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [isSignUp, setIsSignUp] = useState(false);\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: ''\n  });\n  const [message, setMessage] = useState(''); // State for success/error messages\n\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (isSignUp) {\n        // Call register API\n        const response = await registerUser(formData);\n        setMessage(response.data); // Show success message\n      } else {\n        // Call login API\n        const response = await loginUser({\n          email: formData.email,\n          password: formData.password\n        });\n        setMessage('Login successful!');\n        localStorage.setItem('token', response.data.Token); // Save token to localStorage\n      }\n    } catch (error) {\n      var _error$response;\n      setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || 'An error occurred');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isSignUp ? 'Sign Up' : 'Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [isSignUp && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Name\",\n          value: formData.name,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Email\",\n          value: formData.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          value: formData.password,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: isSignUp ? 'Sign Up' : 'Login'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"switch-button\",\n        onClick: () => setIsSignUp(!isSignUp),\n        children: isSignUp ? 'Switch to Login' : 'Switch to Sign Up'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"0qzvBS1daqkSzSYZdgocenopX0Y=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","registerUser","loginUser","jsxDEV","_jsxDEV","Login","_s","isSignUp","setIsSignUp","formData","setFormData","name","email","password","message","setMessage","handleChange","e","target","value","handleSubmit","preventDefault","response","data","localStorage","setItem","Token","error","_error$response","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","onClick","_c","$RefreshReg$"],"sources":["/Users/pradnya/Desktop/ecommerce-app/frontend/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { registerUser, loginUser } from '/api'; // Import API functions\nimport './Login.css';\n\nfunction Login() {\n  const [isSignUp, setIsSignUp] = useState(false);\n  const [formData, setFormData] = useState({ name: '', email: '', password: '' });\n  const [message, setMessage] = useState(''); // State for success/error messages\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      if (isSignUp) {\n        // Call register API\n        const response = await registerUser(formData);\n        setMessage(response.data); // Show success message\n      } else {\n        // Call login API\n        const response = await loginUser({ email: formData.email, password: formData.password });\n        setMessage('Login successful!');\n        localStorage.setItem('token', response.data.Token); // Save token to localStorage\n      }\n    } catch (error) {\n      setMessage(error.response?.data || 'An error occurred');\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <div className=\"login-form\">\n        <h2>{isSignUp ? 'Sign Up' : 'Login'}</h2>\n        <form onSubmit={handleSubmit}>\n          {isSignUp && (\n            <input\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Name\"\n              value={formData.name}\n              onChange={handleChange}\n              required\n            />\n          )}\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            value={formData.email}\n            onChange={handleChange}\n            required\n          />\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            value={formData.password}\n            onChange={handleChange}\n            required\n          />\n          <button type=\"submit\">{isSignUp ? 'Sign Up' : 'Login'}</button>\n        </form>\n        <button className=\"switch-button\" onClick={() => setIsSignUp(!isSignUp)}>\n          {isSignUp ? 'Switch to Login' : 'Switch to Sign Up'}\n        </button>\n        {message && <p>{message}</p>}\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}