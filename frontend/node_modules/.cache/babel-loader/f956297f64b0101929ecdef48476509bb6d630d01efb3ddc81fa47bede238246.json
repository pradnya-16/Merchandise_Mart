{"ast":null,"code":"var _jsxFileName = \"/Users/pradnya/Desktop/ecommerce-app/frontend/src/components/PaymentForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PaymentForm({\n  amount\n}) {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [clientSecret, setClientSecret] = useState(\"\");\n  useEffect(() => {\n    // Fetch the client secret from the backend\n    const fetchClientSecret = async () => {\n      try {\n        const response = await axios.post(\"http://localhost:5002/api/payments/create-payment-intent\", {\n          amount: amount * 100 // Convert dollars to cents\n        });\n        setClientSecret(response.data.clientSecret);\n      } catch (error) {\n        console.error(\"Error fetching client secret:\", error);\n      }\n    };\n    fetchClientSecret();\n  }, [amount]);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!stripe || !elements) {\n      return; // Stripe.js has not loaded yet\n    }\n    const {\n      error,\n      paymentIntent\n    } = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement)\n      }\n    });\n    if (error) {\n      console.error(\"Payment failed:\", error);\n      alert(\"Payment failed!\");\n    } else if (paymentIntent) {\n      console.log(\"Payment successful:\", paymentIntent);\n      alert(\"Payment successful!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Payment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total: $\", amount.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: !stripe || !elements || !clientSecret,\n      children: \"Pay Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(PaymentForm, \"d+OS9/4VmL/+IFc0tzL6+aGzJC4=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = PaymentForm;\nexport default PaymentForm;\nvar _c;\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"names":["React","useState","useEffect","CardElement","useStripe","useElements","axios","jsxDEV","_jsxDEV","PaymentForm","amount","_s","stripe","elements","clientSecret","setClientSecret","fetchClientSecret","response","post","data","error","console","handleSubmit","event","preventDefault","paymentIntent","confirmCardPayment","payment_method","card","getElement","alert","log","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","type","disabled","_c","$RefreshReg$"],"sources":["/Users/pradnya/Desktop/ecommerce-app/frontend/src/components/PaymentForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport axios from \"axios\";\n\nfunction PaymentForm({ amount }) {\n    const stripe = useStripe();\n    const elements = useElements();\n    const [clientSecret, setClientSecret] = useState(\"\");\n\n    useEffect(() => {\n        // Fetch the client secret from the backend\n        const fetchClientSecret = async () => {\n            try {\n                const response = await axios.post(\"http://localhost:5002/api/payments/create-payment-intent\", {\n                    amount: amount * 100, // Convert dollars to cents\n                });\n                setClientSecret(response.data.clientSecret);\n            } catch (error) {\n                console.error(\"Error fetching client secret:\", error);\n            }\n        };\n\n        fetchClientSecret();\n    }, [amount]);\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        if (!stripe || !elements) {\n            return; // Stripe.js has not loaded yet\n        }\n\n        const { error, paymentIntent } = await stripe.confirmCardPayment(clientSecret, {\n            payment_method: {\n                card: elements.getElement(CardElement),\n            },\n        });\n\n        if (error) {\n            console.error(\"Payment failed:\", error);\n            alert(\"Payment failed!\");\n        } else if (paymentIntent) {\n            console.log(\"Payment successful:\", paymentIntent);\n            alert(\"Payment successful!\");\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <h3>Payment</h3>\n            <p>Total: ${amount.toFixed(2)}</p>\n            <CardElement />\n            <button type=\"submit\" disabled={!stripe || !elements || !clientSecret}>\n                Pay Now\n            </button>\n        </form>\n    );\n}\n\nexport default PaymentForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}