{"ast":null,"code":"var _jsxFileName = \"/Users/pradnya/Desktop/ecommerce-app/frontend/src/components/Payment.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport './Payment.css';\n\n// Load Stripe with your publishable key\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe('pk_test_51QMcBgELN7EfHzd3PuMN61SJzcRKjeVSdWcPrHdCc7sekN2tpGqKdyHYANvQtOJFvasBy8cQ2jEt0XBJslYob6Pd00d0C6coWb');\nfunction Payment({\n  totalAmountInCents\n}) {\n  _s();\n  const [isProcessing, setIsProcessing] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Payment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Elements, {\n      stripe: stripePromise,\n      children: /*#__PURE__*/_jsxDEV(CheckoutForm, {\n        totalAmountInCents: totalAmountInCents,\n        isProcessing: isProcessing,\n        setIsProcessing: setIsProcessing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s(Payment, \"23doSrFnpDt6GWBaV15L/gfAQhY=\");\n_c = Payment;\nfunction CheckoutForm({\n  totalAmountInCents,\n  isProcessing,\n  setIsProcessing\n}) {\n  _s2();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setIsProcessing(true);\n    if (!stripe || !elements) return;\n    const cardElement = elements.getElement(CardElement);\n    try {\n      const response = await fetch('http://localhost:5000/api/payments/create-payment-intent', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          amount: totalAmountInCents\n        }) // Dynamic amount passed here\n      });\n      const data = await response.json();\n      if (!data.clientSecret) {\n        setErrorMessage(\"Failed to fetch client secret\");\n        setIsProcessing(false);\n        return;\n      }\n      const paymentResult = await stripe.confirmCardPayment(data.clientSecret, {\n        payment_method: {\n          card: cardElement\n        }\n      });\n      if (paymentResult.error) {\n        setErrorMessage(paymentResult.error.message);\n      } else {\n        alert('Payment successful!');\n      }\n    } catch (error) {\n      setErrorMessage('Payment failed. Try again.');\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"checkout-form\",\n    children: [/*#__PURE__*/_jsxDEV(CardElement, {\n      className: \"card-element\",\n      options: {\n        style: {\n          base: {\n            fontSize: '16px',\n            color: '#424770',\n            '::placeholder': {\n              color: '#aab7c4'\n            }\n          },\n          invalid: {\n            color: '#9e2146'\n          }\n        },\n        hidePostalCode: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: !stripe || isProcessing,\n      className: \"payment-button\",\n      children: isProcessing ? 'Processing...' : 'Pay Now'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s2(CheckoutForm, \"TyJnv3yVrBeH1XI1RpAtfAjjgcg=\", false, function () {\n  return [useStripe, useElements];\n});\n_c2 = CheckoutForm;\nexport default Payment;\nvar _c, _c2;\n$RefreshReg$(_c, \"Payment\");\n$RefreshReg$(_c2, \"CheckoutForm\");","map":{"version":3,"names":["React","useState","loadStripe","Elements","CardElement","useStripe","useElements","jsxDEV","_jsxDEV","stripePromise","Payment","totalAmountInCents","_s","isProcessing","setIsProcessing","className","children","fileName","_jsxFileName","lineNumber","columnNumber","stripe","CheckoutForm","_c","_s2","elements","errorMessage","setErrorMessage","handleSubmit","event","preventDefault","cardElement","getElement","response","fetch","method","headers","body","JSON","stringify","amount","data","json","clientSecret","paymentResult","confirmCardPayment","payment_method","card","error","message","alert","onSubmit","options","style","base","fontSize","color","invalid","hidePostalCode","type","disabled","_c2","$RefreshReg$"],"sources":["/Users/pradnya/Desktop/ecommerce-app/frontend/src/components/Payment.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport './Payment.css';\n\n// Load Stripe with your publishable key\nconst stripePromise = loadStripe('pk_test_51QMcBgELN7EfHzd3PuMN61SJzcRKjeVSdWcPrHdCc7sekN2tpGqKdyHYANvQtOJFvasBy8cQ2jEt0XBJslYob6Pd00d0C6coWb');\n\nfunction Payment({ totalAmountInCents }) {\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  return (\n    <div className=\"payment-container\">\n      <h2>Payment</h2>\n      <Elements stripe={stripePromise}>\n        <CheckoutForm\n          totalAmountInCents={totalAmountInCents}\n          isProcessing={isProcessing}\n          setIsProcessing={setIsProcessing}\n        />\n      </Elements>\n    </div>\n  );\n}\n\nfunction CheckoutForm({ totalAmountInCents, isProcessing, setIsProcessing }) {\n  const stripe = useStripe();\n  const elements = useElements();\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setIsProcessing(true);\n\n    if (!stripe || !elements) return;\n\n    const cardElement = elements.getElement(CardElement);\n\n    try {\n      const response = await fetch('http://localhost:5000/api/payments/create-payment-intent', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ amount: totalAmountInCents }), // Dynamic amount passed here\n      });\n\n      const data = await response.json();\n\n      if (!data.clientSecret) {\n        setErrorMessage(\"Failed to fetch client secret\");\n        setIsProcessing(false);\n        return;\n      }\n\n      const paymentResult = await stripe.confirmCardPayment(data.clientSecret, {\n        payment_method: { card: cardElement },\n      });\n\n      if (paymentResult.error) {\n        setErrorMessage(paymentResult.error.message);\n      } else {\n        alert('Payment successful!');\n      }\n    } catch (error) {\n      setErrorMessage('Payment failed. Try again.');\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"checkout-form\">\n      <CardElement\n        className=\"card-element\"\n        options={{\n          style: {\n            base: {\n              fontSize: '16px',\n              color: '#424770',\n              '::placeholder': { color: '#aab7c4' },\n            },\n            invalid: { color: '#9e2146' },\n          },\n          hidePostalCode: true,\n        }}\n      />\n      <button type=\"submit\" disabled={!stripe || isProcessing} className=\"payment-button\">\n        {isProcessing ? 'Processing...' : 'Pay Now'}\n      </button>\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n    </form>\n  );\n}\n\nexport default Payment;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}