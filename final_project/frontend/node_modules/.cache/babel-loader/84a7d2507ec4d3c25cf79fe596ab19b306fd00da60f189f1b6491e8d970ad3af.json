{"ast":null,"code":"var _jsxFileName = \"/Users/pradnya/Desktop/ecommerce-app/frontend/src/components/PaymentForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe('pk_test_51QMcBgELN7EfHzd3PuMN61SJzcRKjeVSdWcPrHdCc7sekN2tpGqKdyHYANvQtOJFvasBy8cQ2jEt0XBJslYob6Pd00d0C6coWb'); // Replace with your Stripe publishable key\n\nconst CheckoutForm = () => {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [message, setMessage] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsProcessing(true);\n    const {\n      error,\n      paymentIntent\n    } = await stripe.confirmCardPayment('sk_test_51QMcBgELN7EfHzd3PSRUO37EY5M3F9uMs5Vn8MfMJBTRcjT2AsBoGzXtCHeIm898xdXKC4CBzlAeivxQyms9UJ90006GKjJb21',\n    // Replace this with the client secret returned by your backend\n    {\n      payment_method: {\n        card: elements.getElement(CardElement)\n      }\n    });\n    if (error) {\n      setMessage(error.message);\n    } else if (paymentIntent.status === 'succeeded') {\n      setMessage('Payment successful!');\n    }\n    setIsProcessing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: !stripe || isProcessing,\n      children: isProcessing ? 'Processing...' : 'Pay'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(CheckoutForm, \"8v8dNHA2lJGKXe1/VNrxSinFzdw=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = CheckoutForm;\nconst Payment = () => /*#__PURE__*/_jsxDEV(Elements, {\n  stripe: stripePromise,\n  children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 48,\n  columnNumber: 5\n}, this);\n_c2 = Payment;\nexport default Payment;\nvar _c, _c2;\n$RefreshReg$(_c, \"CheckoutForm\");\n$RefreshReg$(_c2, \"Payment\");","map":{"version":3,"names":["React","useState","loadStripe","Elements","CardElement","useStripe","useElements","axios","jsxDEV","_jsxDEV","stripePromise","CheckoutForm","_s","stripe","elements","isProcessing","setIsProcessing","message","setMessage","handleSubmit","e","preventDefault","error","paymentIntent","confirmCardPayment","payment_method","card","getElement","status","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","disabled","_c","Payment","_c2","$RefreshReg$"],"sources":["/Users/pradnya/Desktop/ecommerce-app/frontend/src/components/PaymentForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport axios from 'axios';\n\nconst stripePromise = loadStripe('pk_test_51QMcBgELN7EfHzd3PuMN61SJzcRKjeVSdWcPrHdCc7sekN2tpGqKdyHYANvQtOJFvasBy8cQ2jEt0XBJslYob6Pd00d0C6coWb'); // Replace with your Stripe publishable key\n\nconst CheckoutForm = () => {\n    const stripe = useStripe();\n    const elements = useElements();\n    const [isProcessing, setIsProcessing] = useState(false);\n    const [message, setMessage] = useState('');\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setIsProcessing(true);\n\n        const { error, paymentIntent } = await stripe.confirmCardPayment(\n            'sk_test_51QMcBgELN7EfHzd3PSRUO37EY5M3F9uMs5Vn8MfMJBTRcjT2AsBoGzXtCHeIm898xdXKC4CBzlAeivxQyms9UJ90006GKjJb21', // Replace this with the client secret returned by your backend\n            {\n                payment_method: {\n                    card: elements.getElement(CardElement),\n                },\n            }\n        );\n\n        if (error) {\n            setMessage(error.message);\n        } else if (paymentIntent.status === 'succeeded') {\n            setMessage('Payment successful!');\n        }\n\n        setIsProcessing(false);\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <CardElement />\n            <button type=\"submit\" disabled={!stripe || isProcessing}>\n                {isProcessing ? 'Processing...' : 'Pay'}\n            </button>\n            {message && <div>{message}</div>}\n        </form>\n    );\n};\n\nconst Payment = () => (\n    <Elements stripe={stripePromise}>\n        <CheckoutForm />\n    </Elements>\n);\n\nexport default Payment;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,SAASC,QAAQ,EAAEC,WAAW,EAAEC,SAAS,EAAEC,WAAW,QAAQ,yBAAyB;AACvF,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGR,UAAU,CAAC,6GAA6G,CAAC,CAAC,CAAC;;AAEjJ,MAAMS,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,MAAM,GAAGR,SAAS,CAAC,CAAC;EAC1B,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMkB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBL,eAAe,CAAC,IAAI,CAAC;IAErB,MAAM;MAAEM,KAAK;MAAEC;IAAc,CAAC,GAAG,MAAMV,MAAM,CAACW,kBAAkB,CAC5D,6GAA6G;IAAE;IAC/G;MACIC,cAAc,EAAE;QACZC,IAAI,EAAEZ,QAAQ,CAACa,UAAU,CAACvB,WAAW;MACzC;IACJ,CACJ,CAAC;IAED,IAAIkB,KAAK,EAAE;MACPJ,UAAU,CAACI,KAAK,CAACL,OAAO,CAAC;IAC7B,CAAC,MAAM,IAAIM,aAAa,CAACK,MAAM,KAAK,WAAW,EAAE;MAC7CV,UAAU,CAAC,qBAAqB,CAAC;IACrC;IAEAF,eAAe,CAAC,KAAK,CAAC;EAC1B,CAAC;EAED,oBACIP,OAAA;IAAMoB,QAAQ,EAAEV,YAAa;IAAAW,QAAA,gBACzBrB,OAAA,CAACL,WAAW;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACfzB,OAAA;MAAQ0B,IAAI,EAAC,QAAQ;MAACC,QAAQ,EAAE,CAACvB,MAAM,IAAIE,YAAa;MAAAe,QAAA,EACnDf,YAAY,GAAG,eAAe,GAAG;IAAK;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,EACRjB,OAAO,iBAAIR,OAAA;MAAAqB,QAAA,EAAMb;IAAO;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAAC;AAEf,CAAC;AAACtB,EAAA,CArCID,YAAY;EAAA,QACCN,SAAS,EACPC,WAAW;AAAA;AAAA+B,EAAA,GAF1B1B,YAAY;AAuClB,MAAM2B,OAAO,GAAGA,CAAA,kBACZ7B,OAAA,CAACN,QAAQ;EAACU,MAAM,EAAEH,aAAc;EAAAoB,QAAA,eAC5BrB,OAAA,CAACE,YAAY;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACV,CACb;AAACK,GAAA,GAJID,OAAO;AAMb,eAAeA,OAAO;AAAC,IAAAD,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}